#!/usr/bin/env node

var path = require("path"),
    fs = require("fs"),
    optimist = require("optimist"),
    topojson = require("../");

var argv = optimist
    .options("o", {
      alias: "out",
      default: "/dev/stdout",
    })
    .options("q", {
      alias: "quantization",
      describe: "maximum number of differentiable points in one dimension",
      default: 1e4,
    })
    .options("s", {
      alias: "simplify",
      default: 0,
    })
    .options("id-property", {
      default: null
    })
    .argv

var files = [],
    id = argv["id-property"],
    idType = /^\+/.test(id) ? (id = id.substring(1), Number) : String;

argv._.forEach(function(file) {
  var object = JSON.parse(fs.readFileSync(file, "utf-8"));
  files.push(object);
  if (id) object.features.forEach(function(f) { f.id = idType(f.properties[id]); });
});

var json = topojson.topology(files, +argv.q);
if (+argv.s > 0) topojson.simplify(json, +argv.s);
json = JSON.stringify(json);
if (argv.o === "/dev/stdout") fs.appendFileSync(argv.o, json, "utf8");
else fs.writeFileSync(argv.o, json, "utf8");
